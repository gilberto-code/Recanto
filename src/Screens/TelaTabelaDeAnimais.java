
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Screens;

import Objects.*;
import Controllers.*;
import Services.CellRenderer;
import Services.Controll_Images;
import Services.GerarPDF;
import Services.ImageFileView;
import Services.ImageFilter;
import Services.ImagePreview;
import Services.MyTableModel;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ButtonModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;

/**
 *
 * @author Gilberto 
 */
public class TelaTabelaDeAnimais extends javax.swing.JPanel {
    private MyTableModel modeloTabela;
    
    int posicaoImagem = -1;
    ControllerAnimal controllerAnimal = new ControllerAnimal();
    ImageIcon ImagemIconAnimal = new ImageIcon();
    ImageIcon ImagemIconAdotante = new ImageIcon();
    
    String ultimoPacote = "";
    TelaMenu framePrincipal;
    
    public TelaTabelaDeAnimais(JFrame jf) throws Exception {
        framePrincipal = (TelaMenu) jf;
        initComponents();
        new Thread(new Runnable() {
            public void run() {
                JFrame frame;
                frame = new TelaLoading();
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
                frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                
                try {
                    modeloTabela = new MyTableModel(false);               
                    jtTabelaAnimais.setModel(modeloTabela);
                    //jtTabelaAnimais.setModel(modeloTabela);
                    jtTabelaAnimais.setDefaultRenderer(Object.class, new CellRenderer());
                    jtTabelaAnimais.setRowHeight(150);

                    for(LookAndFeelInfo info: UIManager.getInstalledLookAndFeels()){
                        if("Windows".equals(info.getName())){
                            UIManager.setLookAndFeel(info.getClassName());
                            break;
                        }
                    }
                    jspAdocao.getVerticalScrollBar().setUnitIncrement(5);
                    jcbEscolherTabela.setBackground(Color.WHITE);
                    jspDescricao.getVerticalScrollBar().setUnitIncrement(10);
                } catch (Exception ex) {
                       JOptionPane.showMessageDialog(null, ex.getMessage(),
                    "Ocorreu um erro durante a execução do programa", JOptionPane.INFORMATION_MESSAGE);
                    Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                frame.setVisible(false);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
            }
            }).start();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgFiltroPrenha = new javax.swing.ButtonGroup();
        bgFiltroVacinado = new javax.swing.ButtonGroup();
        bgFiltroCastrado = new javax.swing.ButtonGroup();
        bgFiltroSexo = new javax.swing.ButtonGroup();
        jpnBackground = new javax.swing.JPanel();
        jpnPaiLeft = new javax.swing.JPanel();
        jpnPrincipal = new javax.swing.JPanel();
        jspDescricao = new javax.swing.JScrollPane();
        jpnDescricao = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jblPrenha = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        txt_imagem = new javax.swing.JLabel();
        jtfEspecie = new javax.swing.JTextField();
        jtfNome = new javax.swing.JTextField();
        jtfIdade = new javax.swing.JTextField();
        jtfPorte = new javax.swing.JTextField();
        jtfRaca = new javax.swing.JTextField();
        jtfCor = new javax.swing.JTextField();
        jtfDoenca = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaDescricao = new javax.swing.JTextArea();
        jrbVacinadoSim = new javax.swing.JRadioButton();
        jrbVacinadoNao = new javax.swing.JRadioButton();
        jrbCastradoSim = new javax.swing.JRadioButton();
        jrbCastradoNao = new javax.swing.JRadioButton();
        jpnAddFoto = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jpnExcluirFoto = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jpnPrenha = new javax.swing.JPanel();
        jrbPrenhaNao = new javax.swing.JRadioButton();
        jrbPrenhaSim = new javax.swing.JRadioButton();
        jrbMacho = new javax.swing.JRadioButton();
        jrbFemea = new javax.swing.JRadioButton();
        jcbEscolherTabela = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jpnAtualizar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jpnAdotar = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jpnExcluir = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jpnPesquisar = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jpnLista = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jpPesquisa = new javax.swing.JPanel();
        jpnFiltros = new javax.swing.JPanel();
        lblPesquisar = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLimparSexo = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jtfFiltroEspecie = new javax.swing.JTextField();
        jtfFiltroNome = new javax.swing.JTextField();
        jtfFiltroPorte = new javax.swing.JTextField();
        jtfFiltroRaca = new javax.swing.JTextField();
        jtfFiltroCor = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jrbFiltroMacho = new javax.swing.JRadioButton();
        jrbFiltroFemea = new javax.swing.JRadioButton();
        jrbFemea3 = new javax.swing.JRadioButton();
        jFecharPesquisa = new javax.swing.JLabel();
        jpnAdocao = new javax.swing.JPanel();
        jcbSelecioneAdotante = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        jlbNomeAnimalAdocao = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jpnCadastrarAdotanteAtoDeAdocao = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jpnEfetuarAdocao = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jpnVoltarATeladeAnimais = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jcbAnimais1 = new javax.swing.JComboBox<>();
        jpnCadastrarAdot = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jtfTelefoneAdotante = new javax.swing.JFormattedTextField();
        jtfCPFAdotante = new javax.swing.JFormattedTextField();
        jLabel41 = new javax.swing.JLabel();
        jtfEndereçoAdotante = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jtfNomeAdotante = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_imagem1 = new javax.swing.JLabel();
        txt_imagem_adotante = new javax.swing.JLabel();
        jpnAddFotoAdptante = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jpnExcluirFotoAdotante = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jpnPai = new javax.swing.JPanel();
        jspAdocao = new javax.swing.JScrollPane();
        jtTabelaAnimais = new javax.swing.JTable();
        jpDadosAdocao = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        txt_imagem_animal_adocao = new javax.swing.JLabel();
        jlEspecie = new javax.swing.JLabel();
        jlNome = new javax.swing.JLabel();
        jlIdade = new javax.swing.JLabel();
        jlCor = new javax.swing.JLabel();
        jlDescricao = new javax.swing.JLabel();
        jlSexo1 = new javax.swing.JLabel();
        jpnCancelarAdocao = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jpnFinalizarAdocao = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpnBackground.setBackground(new java.awt.Color(255, 255, 255));
        jpnBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpnPaiLeft.setBackground(new java.awt.Color(255, 255, 255));
        jpnPaiLeft.setLayout(new java.awt.CardLayout());

        jpnPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        jpnPrincipal.setPreferredSize(new java.awt.Dimension(300, 600));
        jpnPrincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jspDescricao.setBorder(null);
        jspDescricao.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jpnDescricao.setBackground(new java.awt.Color(255, 255, 255));
        jpnDescricao.setPreferredSize(new java.awt.Dimension(300, 1000));
        jpnDescricao.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(56, 0, 56));
        jLabel27.setText("Espécie");
        jpnDescricao.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 12));

        jLabel28.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(56, 0, 56));
        jLabel28.setText("Nome");
        jpnDescricao.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 40, 12));

        jLabel29.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(56, 0, 56));
        jLabel29.setText("Idade");
        jpnDescricao.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 50, 12));

        jLabel30.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(56, 0, 56));
        jLabel30.setText("Porte");
        jpnDescricao.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, 12));

        jLabel31.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(56, 0, 56));
        jLabel31.setText("Raça");
        jpnDescricao.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, 12));

        jLabel32.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(56, 0, 56));
        jLabel32.setText("Cor");
        jpnDescricao.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, 12));

        jLabel36.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(56, 0, 56));
        jLabel36.setText("Sexo");
        jpnDescricao.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, 12));

        jblPrenha.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jblPrenha.setForeground(new java.awt.Color(56, 0, 56));
        jblPrenha.setText("Prenha");
        jpnDescricao.add(jblPrenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, 12));

        jLabel50.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(56, 0, 56));
        jLabel50.setText("Vacinado");
        jpnDescricao.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 70, 12));

        jLabel53.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(56, 0, 56));
        jLabel53.setText("Castrado");
        jpnDescricao.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 70, 12));

        jLabel51.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(56, 0, 56));
        jLabel51.setText("Doença");
        jpnDescricao.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, 60, 12));

        jLabel65.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(56, 0, 56));
        jLabel65.setText("Descrição");
        jpnDescricao.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 560, 70, 12));

        txt_imagem.setBackground(new java.awt.Color(255, 255, 255));
        txt_imagem.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        txt_imagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_imagem.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(204, 204, 204)));
        jpnDescricao.add(txt_imagem, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 690, 200, 150));

        jtfEspecie.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfEspecie.setForeground(new java.awt.Color(56, 0, 56));
        jtfEspecie.setBorder(null);
        jtfEspecie.setSelectionColor(new java.awt.Color(149, 113, 149));
        jtfEspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEspecieActionPerformed(evt);
            }
        });
        jpnDescricao.add(jtfEspecie, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 220, 16));

        jtfNome.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfNome.setForeground(new java.awt.Color(56, 0, 56));
        jtfNome.setBorder(null);
        jtfNome.setSelectionColor(new java.awt.Color(149, 113, 149));
        jtfNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNomeActionPerformed(evt);
            }
        });
        jpnDescricao.add(jtfNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 220, 16));

        jtfIdade.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfIdade.setForeground(new java.awt.Color(56, 0, 56));
        jtfIdade.setBorder(null);
        jtfIdade.setSelectionColor(new java.awt.Color(149, 113, 149));
        jpnDescricao.add(jtfIdade, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 220, 16));

        jtfPorte.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfPorte.setForeground(new java.awt.Color(56, 0, 56));
        jtfPorte.setBorder(null);
        jtfPorte.setSelectionColor(new java.awt.Color(149, 113, 149));
        jtfPorte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPorteActionPerformed(evt);
            }
        });
        jpnDescricao.add(jtfPorte, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 220, 16));

        jtfRaca.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfRaca.setForeground(new java.awt.Color(56, 0, 56));
        jtfRaca.setBorder(null);
        jtfRaca.setSelectionColor(new java.awt.Color(149, 113, 149));
        jtfRaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfRacaActionPerformed(evt);
            }
        });
        jpnDescricao.add(jtfRaca, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 220, 16));

        jtfCor.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfCor.setForeground(new java.awt.Color(56, 0, 56));
        jtfCor.setBorder(null);
        jtfCor.setSelectionColor(new java.awt.Color(149, 113, 149));
        jtfCor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCorActionPerformed(evt);
            }
        });
        jpnDescricao.add(jtfCor, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 220, 16));

        jtfDoenca.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfDoenca.setForeground(new java.awt.Color(56, 0, 56));
        jtfDoenca.setBorder(null);
        jtfDoenca.setSelectionColor(new java.awt.Color(149, 113, 149));
        jpnDescricao.add(jtfDoenca, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 540, 220, 16));
        jpnDescricao.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 1140, 20, 20));

        jtaDescricao.setColumns(20);
        jtaDescricao.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtaDescricao.setForeground(new java.awt.Color(56, 0, 56));
        jtaDescricao.setLineWrap(true);
        jtaDescricao.setRows(5);
        jtaDescricao.setBorder(null);
        jtaDescricao.setSelectionColor(new java.awt.Color(149, 113, 149));
        jScrollPane2.setViewportView(jtaDescricao);

        jpnDescricao.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, 240, -1));

        bgFiltroVacinado.add(jrbVacinadoSim);
        jrbVacinadoSim.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jrbVacinadoSim.setForeground(new java.awt.Color(56, 0, 56));
        jrbVacinadoSim.setText("Sim");
        jrbVacinadoSim.setOpaque(false);
        jpnDescricao.add(jrbVacinadoSim, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, 16));

        bgFiltroVacinado.add(jrbVacinadoNao);
        jrbVacinadoNao.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jrbVacinadoNao.setForeground(new java.awt.Color(56, 0, 56));
        jrbVacinadoNao.setText("Não");
        jrbVacinadoNao.setOpaque(false);
        jpnDescricao.add(jrbVacinadoNao, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 440, -1, 16));

        bgFiltroCastrado.add(jrbCastradoSim);
        jrbCastradoSim.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jrbCastradoSim.setForeground(new java.awt.Color(56, 0, 56));
        jrbCastradoSim.setText("Sim");
        jrbCastradoSim.setOpaque(false);
        jpnDescricao.add(jrbCastradoSim, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, -1, 16));

        bgFiltroCastrado.add(jrbCastradoNao);
        jrbCastradoNao.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jrbCastradoNao.setForeground(new java.awt.Color(56, 0, 56));
        jrbCastradoNao.setText("Não");
        jrbCastradoNao.setOpaque(false);
        jpnDescricao.add(jrbCastradoNao, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 490, -1, 16));

        jpnAddFoto.setBackground(new java.awt.Color(56, 0, 56));
        jpnAddFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnAddFotoMouseClicked(evt);
            }
        });
        jpnAddFoto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-mais-20 (1).png"))); // NOI18N
        jpnAddFoto.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        jpnDescricao.add(jpnAddFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 850, 30, 30));

        jpnExcluirFoto.setBackground(new java.awt.Color(56, 0, 56));
        jpnExcluirFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnExcluirFotoMouseClicked(evt);
            }
        });
        jpnExcluirFoto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-cancelar-20 (1).png"))); // NOI18N
        jpnExcluirFoto.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        jpnDescricao.add(jpnExcluirFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 850, 30, 30));

        jpnPrenha.setBackground(new java.awt.Color(255, 255, 255));

        bgFiltroPrenha.add(jrbPrenhaNao);
        jrbPrenhaNao.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jrbPrenhaNao.setForeground(new java.awt.Color(56, 0, 56));
        jrbPrenhaNao.setText("Não");
        jrbPrenhaNao.setOpaque(false);

        bgFiltroPrenha.add(jrbPrenhaSim);
        jrbPrenhaSim.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jrbPrenhaSim.setForeground(new java.awt.Color(56, 0, 56));
        jrbPrenhaSim.setText("Sim");
        jrbPrenhaSim.setOpaque(false);

        javax.swing.GroupLayout jpnPrenhaLayout = new javax.swing.GroupLayout(jpnPrenha);
        jpnPrenha.setLayout(jpnPrenhaLayout);
        jpnPrenhaLayout.setHorizontalGroup(
            jpnPrenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnPrenhaLayout.createSequentialGroup()
                .addComponent(jrbPrenhaSim)
                .addGap(13, 13, 13)
                .addComponent(jrbPrenhaNao)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jpnPrenhaLayout.setVerticalGroup(
            jpnPrenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnPrenhaLayout.createSequentialGroup()
                .addGroup(jpnPrenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbPrenhaSim, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jrbPrenhaNao, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 4, Short.MAX_VALUE))
        );

        jpnDescricao.add(jpnPrenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, 20));

        bgFiltroSexo.add(jrbMacho);
        jrbMacho.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jrbMacho.setForeground(new java.awt.Color(56, 0, 56));
        jrbMacho.setText("Macho");
        jrbMacho.setOpaque(false);
        jrbMacho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMachoActionPerformed(evt);
            }
        });
        jpnDescricao.add(jrbMacho, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, 16));

        bgFiltroSexo.add(jrbFemea);
        jrbFemea.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jrbFemea.setForeground(new java.awt.Color(56, 0, 56));
        jrbFemea.setText("Fêmea");
        jrbFemea.setOpaque(false);
        jrbFemea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFemeaActionPerformed(evt);
            }
        });
        jpnDescricao.add(jrbFemea, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, -1, 16));

        jspDescricao.setViewportView(jpnDescricao);

        jpnPrincipal.add(jspDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 300, 370));

        jcbEscolherTabela.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jcbEscolherTabela.setForeground(new java.awt.Color(56, 0, 56));
        jcbEscolherTabela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Animais para Adoção", "Animais Adotados" }));
        jcbEscolherTabela.setBorder(null);
        jcbEscolherTabela.setOpaque(false);
        jcbEscolherTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEscolherTabelaActionPerformed(evt);
            }
        });
        jpnPrincipal.add(jcbEscolherTabela, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 170, 30));
        jpnPrincipal.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        jpnAtualizar.setBackground(new java.awt.Color(56, 0, 56));
        jpnAtualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnAtualizarMouseClicked(evt);
            }
        });
        jpnAtualizar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Atualizar");
        jpnAtualizar.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 30));

        jpnPrincipal.add(jpnAtualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 80, 30));

        jpnAdotar.setBackground(new java.awt.Color(56, 0, 56));
        jpnAdotar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnAdotarMouseClicked(evt);
            }
        });
        jpnAdotar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Adotar");
        jpnAdotar.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 30));

        jpnPrincipal.add(jpnAdotar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 530, 80, 30));

        jpnExcluir.setBackground(new java.awt.Color(56, 0, 56));
        jpnExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnExcluirMouseClicked(evt);
            }
        });
        jpnExcluir.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Excluir");
        jpnExcluir.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 30));

        jpnPrincipal.add(jpnExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 530, 80, 30));

        jpnPesquisar.setBackground(new java.awt.Color(56, 0, 56));
        jpnPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnPesquisarMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Filtrar");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jpnPesquisarLayout = new javax.swing.GroupLayout(jpnPesquisar);
        jpnPesquisar.setLayout(jpnPesquisarLayout);
        jpnPesquisarLayout.setHorizontalGroup(
            jpnPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
        );
        jpnPesquisarLayout.setVerticalGroup(
            jpnPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jpnPrincipal.add(jpnPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 80, 30));

        jpnLista.setBackground(new java.awt.Color(56, 0, 56));
        jpnLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnListaMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Gerar lista");

        javax.swing.GroupLayout jpnListaLayout = new javax.swing.GroupLayout(jpnLista);
        jpnLista.setLayout(jpnListaLayout);
        jpnListaLayout.setHorizontalGroup(
            jpnListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpnListaLayout.setVerticalGroup(
            jpnListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jpnPrincipal.add(jpnLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 80, 30));

        jpnPaiLeft.add(jpnPrincipal, "jpnPrincipal");

        jpPesquisa.setBackground(new java.awt.Color(255, 255, 255));
        jpPesquisa.setPreferredSize(new java.awt.Dimension(300, 580));
        jpPesquisa.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpnFiltros.setBackground(new java.awt.Color(255, 255, 255));
        jpnFiltros.setPreferredSize(new java.awt.Dimension(300, 1000));
        jpnFiltros.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPesquisar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-pesquisar-30.png"))); // NOI18N
        lblPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPesquisarMouseClicked(evt);
            }
        });
        jpnFiltros.add(lblPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, -1, -1));
        jpnFiltros.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, -1, 360));

        jLimparSexo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/IconExit (6).png"))); // NOI18N
        jLimparSexo.setPreferredSize(new java.awt.Dimension(40, 40));
        jLimparSexo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLimparSexoMouseClicked(evt);
            }
        });
        jpnFiltros.add(jLimparSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 20, 20));

        jLabel33.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(56, 0, 56));
        jLabel33.setText("Espécie");
        jpnFiltros.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 12));

        jLabel44.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(56, 0, 56));
        jLabel44.setText("Nome");
        jpnFiltros.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 40, 12));

        jLabel46.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(56, 0, 56));
        jLabel46.setText("Porte");
        jpnFiltros.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 12));

        jLabel47.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(56, 0, 56));
        jLabel47.setText("Raça");
        jpnFiltros.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, 12));

        jLabel48.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(56, 0, 56));
        jLabel48.setText("Cor");
        jpnFiltros.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, 12));

        jLabel49.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(56, 0, 56));
        jLabel49.setText("Sexo");
        jpnFiltros.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, 12));

        jtfFiltroEspecie.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfFiltroEspecie.setForeground(new java.awt.Color(56, 0, 56));
        jtfFiltroEspecie.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(131, 106, 131), 1, true));
        jtfFiltroEspecie.setSelectionColor(new java.awt.Color(149, 113, 149));
        jtfFiltroEspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfFiltroEspecieActionPerformed(evt);
            }
        });
        jpnFiltros.add(jtfFiltroEspecie, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 220, 20));

        jtfFiltroNome.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfFiltroNome.setForeground(new java.awt.Color(56, 0, 56));
        jtfFiltroNome.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(131, 106, 131), 1, true));
        jtfFiltroNome.setSelectionColor(new java.awt.Color(149, 113, 149));
        jtfFiltroNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfFiltroNomeActionPerformed(evt);
            }
        });
        jpnFiltros.add(jtfFiltroNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 220, 20));

        jtfFiltroPorte.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfFiltroPorte.setForeground(new java.awt.Color(56, 0, 56));
        jtfFiltroPorte.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(131, 106, 131), 1, true));
        jtfFiltroPorte.setSelectionColor(new java.awt.Color(149, 113, 149));
        jtfFiltroPorte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfFiltroPorteActionPerformed(evt);
            }
        });
        jpnFiltros.add(jtfFiltroPorte, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 220, 20));

        jtfFiltroRaca.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfFiltroRaca.setForeground(new java.awt.Color(56, 0, 56));
        jtfFiltroRaca.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(131, 106, 131), 1, true));
        jtfFiltroRaca.setSelectionColor(new java.awt.Color(149, 113, 149));
        jtfFiltroRaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfFiltroRacaActionPerformed(evt);
            }
        });
        jpnFiltros.add(jtfFiltroRaca, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 220, 20));

        jtfFiltroCor.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfFiltroCor.setForeground(new java.awt.Color(56, 0, 56));
        jtfFiltroCor.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(131, 106, 131), 1, true));
        jtfFiltroCor.setSelectionColor(new java.awt.Color(149, 113, 149));
        jtfFiltroCor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfFiltroCorActionPerformed(evt);
            }
        });
        jpnFiltros.add(jtfFiltroCor, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 220, 20));
        jpnFiltros.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 1140, 20, 20));

        bgFiltroSexo.add(jrbFiltroMacho);
        jrbFiltroMacho.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jrbFiltroMacho.setForeground(new java.awt.Color(56, 0, 56));
        jrbFiltroMacho.setText("Macho");
        jrbFiltroMacho.setOpaque(false);
        jrbFiltroMacho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFiltroMachoActionPerformed(evt);
            }
        });
        jpnFiltros.add(jrbFiltroMacho, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, 16));

        bgFiltroSexo.add(jrbFiltroFemea);
        jrbFiltroFemea.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jrbFiltroFemea.setForeground(new java.awt.Color(56, 0, 56));
        jrbFiltroFemea.setText("Fêmea");
        jrbFiltroFemea.setOpaque(false);
        jrbFiltroFemea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFiltroFemeaActionPerformed(evt);
            }
        });
        jpnFiltros.add(jrbFiltroFemea, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, -1, 16));

        bgFiltroSexo.add(jrbFemea3);
        jrbFemea3.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jrbFemea3.setForeground(new java.awt.Color(56, 0, 56));
        jrbFemea3.setText("Fêmea");
        jrbFemea3.setOpaque(false);
        jrbFemea3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFemea3ActionPerformed(evt);
            }
        });
        jpnFiltros.add(jrbFemea3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, -1, 16));

        jFecharPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/IconExit (6).png"))); // NOI18N
        jFecharPesquisa.setPreferredSize(new java.awt.Dimension(40, 40));
        jFecharPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFecharPesquisaMouseClicked(evt);
            }
        });
        jpnFiltros.add(jFecharPesquisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 20, 20));

        jpPesquisa.add(jpnFiltros, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jpnPaiLeft.add(jpPesquisa, "jpnPesquisa");

        jpnAdocao.setBackground(new java.awt.Color(255, 255, 255));
        jpnAdocao.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcbSelecioneAdotante.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jcbSelecioneAdotante.setForeground(new java.awt.Color(56, 0, 56));
        jcbSelecioneAdotante.setMaximumRowCount(500);
        jpnAdocao.add(jcbSelecioneAdotante, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 170, 30));

        jLabel34.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(56, 0, 56));
        jLabel34.setText("Selecione o adotante:");
        jpnAdocao.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, 12));

        jlbNomeAnimalAdocao.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jlbNomeAnimalAdocao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNomeAnimalAdocao.setText("-----------------------------------------");
        jpnAdocao.add(jlbNomeAnimalAdocao, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 170, 30));

        jLabel35.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(56, 0, 56));
        jLabel35.setText("Selecione o animal na tabela:");
        jpnAdocao.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 12));

        jpnCadastrarAdotanteAtoDeAdocao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnCadastrarAdotanteAtoDeAdocaoMouseClicked(evt);
            }
        });
        jpnCadastrarAdotanteAtoDeAdocao.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Open Sans SemiBold", 0, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Clique aqui e cadastre-o");
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jpnCadastrarAdotanteAtoDeAdocao.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 170, 30));

        jLabel13.setFont(new java.awt.Font("Open Sans SemiBold", 0, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Adotante não cadastrado?");
        jLabel13.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jpnCadastrarAdotanteAtoDeAdocao.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 30));

        jpnAdocao.add(jpnCadastrarAdotanteAtoDeAdocao, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 170, 60));
        jpnAdocao.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 270, 60, -1));
        jpnAdocao.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 320, -1, 260));

        jpnEfetuarAdocao.setBackground(new java.awt.Color(56, 0, 56));
        jpnEfetuarAdocao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnEfetuarAdocaoMouseClicked(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Adotar");
        jLabel21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jpnEfetuarAdocaoLayout = new javax.swing.GroupLayout(jpnEfetuarAdocao);
        jpnEfetuarAdocao.setLayout(jpnEfetuarAdocaoLayout);
        jpnEfetuarAdocaoLayout.setHorizontalGroup(
            jpnEfetuarAdocaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnEfetuarAdocaoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jpnEfetuarAdocaoLayout.setVerticalGroup(
            jpnEfetuarAdocaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnEfetuarAdocaoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpnAdocao.add(jpnEfetuarAdocao, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, -1, -1));

        jpnVoltarATeladeAnimais.setBackground(new java.awt.Color(56, 0, 56));
        jpnVoltarATeladeAnimais.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnVoltarATeladeAnimaisMouseClicked(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Voltar");
        jLabel22.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jpnVoltarATeladeAnimaisLayout = new javax.swing.GroupLayout(jpnVoltarATeladeAnimais);
        jpnVoltarATeladeAnimais.setLayout(jpnVoltarATeladeAnimaisLayout);
        jpnVoltarATeladeAnimaisLayout.setHorizontalGroup(
            jpnVoltarATeladeAnimaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnVoltarATeladeAnimaisLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jpnVoltarATeladeAnimaisLayout.setVerticalGroup(
            jpnVoltarATeladeAnimaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnVoltarATeladeAnimaisLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpnAdocao.add(jpnVoltarATeladeAnimais, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, -1, -1));

        jcbAnimais1.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jcbAnimais1.setMaximumRowCount(100);
        jpnAdocao.add(jcbAnimais1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 170, 30));

        jpnPaiLeft.add(jpnAdocao, "jpnAdocao");

        jpnCadastrarAdot.setBackground(new java.awt.Color(255, 255, 255));
        jpnCadastrarAdot.setPreferredSize(new java.awt.Dimension(300, 580));
        jpnCadastrarAdot.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel37.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(56, 0, 56));
        jLabel37.setText("Foto:");
        jpnCadastrarAdot.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, 20));

        jLabel38.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(56, 0, 56));
        jLabel38.setText("Telefone:");
        jpnCadastrarAdot.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 20));

        jLabel39.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(56, 0, 56));
        jLabel39.setText("CPF:");
        jpnCadastrarAdot.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 20));

        jtfTelefoneAdotante.setForeground(new java.awt.Color(56, 0, 56));
        try {
            jtfTelefoneAdotante.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfTelefoneAdotante.setSelectionColor(new java.awt.Color(149, 113, 149));
        jpnCadastrarAdot.add(jtfTelefoneAdotante, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 200, 20));

        jtfCPFAdotante.setForeground(new java.awt.Color(56, 0, 56));
        try {
            jtfCPFAdotante.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfCPFAdotante.setText("0          ");
        jtfCPFAdotante.setSelectionColor(new java.awt.Color(149, 113, 149));
        jpnCadastrarAdot.add(jtfCPFAdotante, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 230, 20));

        jLabel41.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(56, 0, 56));
        jLabel41.setText("Endereço:");
        jpnCadastrarAdot.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, 20));

        jtfEndereçoAdotante.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfEndereçoAdotante.setForeground(new java.awt.Color(56, 0, 56));
        jtfEndereçoAdotante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEndereçoAdotanteActionPerformed(evt);
            }
        });
        jpnCadastrarAdot.add(jtfEndereçoAdotante, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 200, 60));

        jLabel42.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(56, 0, 56));
        jLabel42.setText("Nome:");
        jpnCadastrarAdot.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 20));

        jtfNomeAdotante.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtfNomeAdotante.setForeground(new java.awt.Color(56, 0, 56));
        jtfNomeAdotante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNomeAdotanteActionPerformed(evt);
            }
        });
        jpnCadastrarAdot.add(jtfNomeAdotante, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 210, 20));

        jTextField4.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(56, 0, 56));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jpnCadastrarAdot.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 210, 20));
        jpnCadastrarAdot.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 550, -1, 30));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-cancelar-20 (1).png"))); // NOI18N
        jpnCadastrarAdot.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-mais-20 (1).png"))); // NOI18N
        jpnCadastrarAdot.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        txt_imagem1.setBackground(new java.awt.Color(255, 255, 255));
        txt_imagem1.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        txt_imagem1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_imagem1.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(204, 204, 204)));
        jpnCadastrarAdot.add(txt_imagem1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 810, 200, 150));

        txt_imagem_adotante.setBackground(new java.awt.Color(255, 255, 255));
        txt_imagem_adotante.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        txt_imagem_adotante.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_imagem_adotante.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(204, 204, 204)));
        jpnCadastrarAdot.add(txt_imagem_adotante, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 200, 150));

        jpnAddFotoAdptante.setBackground(new java.awt.Color(56, 0, 56));
        jpnAddFotoAdptante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnAddFotoAdptanteMouseClicked(evt);
            }
        });
        jpnAddFotoAdptante.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-mais-20 (1).png"))); // NOI18N
        jpnAddFotoAdptante.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        jpnCadastrarAdot.add(jpnAddFotoAdptante, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 430, -1, -1));

        jpnExcluirFotoAdotante.setBackground(new java.awt.Color(56, 0, 56));
        jpnExcluirFotoAdotante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnExcluirFotoAdotanteMouseClicked(evt);
            }
        });
        jpnExcluirFotoAdotante.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-cancelar-20 (1).png"))); // NOI18N
        jpnExcluirFotoAdotante.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        jpnCadastrarAdot.add(jpnExcluirFotoAdotante, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 430, -1, -1));

        jpnPaiLeft.add(jpnCadastrarAdot, "jpnCadastrarAdotante");

        jpnBackground.add(jpnPaiLeft, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 580));

        jpnPai.setLayout(new java.awt.CardLayout());

        jtTabelaAnimais.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jtTabelaAnimais.setForeground(new java.awt.Color(56, 0, 56));
        jtTabelaAnimais.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtTabelaAnimais.setSelectionBackground(new java.awt.Color(56, 0, 56));
        jtTabelaAnimais.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtTabelaAnimais.getTableHeader().setResizingAllowed(false);
        jtTabelaAnimais.getTableHeader().setReorderingAllowed(false);
        jtTabelaAnimais.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTabelaAnimaisMouseClicked(evt);
            }
        });
        jspAdocao.setViewportView(jtTabelaAnimais);

        jpnPai.add(jspAdocao, "TabelaAdocao");

        jpDadosAdocao.setBackground(new java.awt.Color(255, 255, 255));
        jpDadosAdocao.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel40.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(56, 0, 56));
        jLabel40.setText("Espécie");
        jpDadosAdocao.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, 20));

        jLabel43.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(56, 0, 56));
        jLabel43.setText("Nome");
        jpDadosAdocao.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 50, 20));

        jLabel45.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(56, 0, 56));
        jLabel45.setText("Idade");
        jpDadosAdocao.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 50, 20));

        jLabel52.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(56, 0, 56));
        jLabel52.setText("Cor");
        jpDadosAdocao.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 450, -1, 20));

        jLabel54.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(56, 0, 56));
        jLabel54.setText("Sexo");
        jpDadosAdocao.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, -1, 20));

        jLabel66.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(56, 0, 56));
        jLabel66.setText("Descrição");
        jpDadosAdocao.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 370, 90, 30));

        txt_imagem_animal_adocao.setBackground(new java.awt.Color(255, 255, 255));
        txt_imagem_animal_adocao.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        txt_imagem_animal_adocao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_imagem_animal_adocao.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(204, 204, 204)));
        jpDadosAdocao.add(txt_imagem_animal_adocao, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 230, 180));

        jlEspecie.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jpDadosAdocao.add(jlEspecie, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, 200, 40));

        jlNome.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jpDadosAdocao.add(jlNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 200, 40));

        jlIdade.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jpDadosAdocao.add(jlIdade, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, 80, 40));

        jlCor.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jpDadosAdocao.add(jlCor, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 480, 200, 40));

        jlDescricao.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jlDescricao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlDescricao.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jlDescricao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jlDescricao.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jpDadosAdocao.add(jlDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 410, 200, 90));

        jlSexo1.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jpDadosAdocao.add(jlSexo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 320, 200, 40));

        jpnCancelarAdocao.setBackground(new java.awt.Color(56, 0, 56));
        jpnCancelarAdocao.setPreferredSize(new java.awt.Dimension(80, 40));
        jpnCancelarAdocao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnCancelarAdocaoMouseClicked(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Cancelar");
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel25.setPreferredSize(new java.awt.Dimension(58, 16));

        javax.swing.GroupLayout jpnCancelarAdocaoLayout = new javax.swing.GroupLayout(jpnCancelarAdocao);
        jpnCancelarAdocao.setLayout(jpnCancelarAdocaoLayout);
        jpnCancelarAdocaoLayout.setHorizontalGroup(
            jpnCancelarAdocaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnCancelarAdocaoLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpnCancelarAdocaoLayout.setVerticalGroup(
            jpnCancelarAdocaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnCancelarAdocaoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        jpDadosAdocao.add(jpnCancelarAdocao, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 530, 110, -1));

        jpnFinalizarAdocao.setBackground(new java.awt.Color(56, 0, 56));
        jpnFinalizarAdocao.setPreferredSize(new java.awt.Dimension(80, 40));
        jpnFinalizarAdocao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpnFinalizarAdocaoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jpnFinalizarAdocaoMousePressed(evt);
            }
        });

        jLabel55.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 255, 255));
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel55.setText("Adotar");
        jLabel55.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel55.setPreferredSize(new java.awt.Dimension(58, 16));
        jLabel55.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel55MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jpnFinalizarAdocaoLayout = new javax.swing.GroupLayout(jpnFinalizarAdocao);
        jpnFinalizarAdocao.setLayout(jpnFinalizarAdocaoLayout);
        jpnFinalizarAdocaoLayout.setHorizontalGroup(
            jpnFinalizarAdocaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnFinalizarAdocaoLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpnFinalizarAdocaoLayout.setVerticalGroup(
            jpnFinalizarAdocaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnFinalizarAdocaoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        jpDadosAdocao.add(jpnFinalizarAdocao, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 530, 110, -1));

        jpnPai.add(jpDadosAdocao, "card3");

        jpnBackground.add(jpnPai, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 700, 580));

        add(jpnBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 580));
    }// </editor-fold>//GEN-END:initComponents

    private void lblPesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPesquisarMouseClicked
        
        Animal animal_filtro = new Animal();
        
        animal_filtro.setNome(jtfFiltroNome.getText());
        animal_filtro.setEspecie(jtfFiltroEspecie.getText());
        animal_filtro.setPorte(jtfFiltroPorte.getText());
        animal_filtro.setRaca(jtfFiltroRaca.getText());
        animal_filtro.setCor(jtfFiltroCor.getText());
        
        if(!bgFiltroSexo.isSelected(null)){
            if(jrbFiltroFemea.isSelected()){
                animal_filtro.setSexo("Fêmea");
            }else{
                animal_filtro.setSexo("Macho");
            }
        }else{
            animal_filtro.setSexo("");
        }
        new Thread(new Runnable() {
            public void run() {
                JFrame frame;
                frame = new TelaLoading();
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
                frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

                try {
                    modeloTabela = new MyTableModel(animal_filtro);
                    jtTabelaAnimais.setModel(modeloTabela);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage(),
                            "Ocorreu um erro durante a execução do programa", JOptionPane.INFORMATION_MESSAGE);
                    Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
                }
                frame.setVisible(false);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
            }
        }).start();
        
        
        

        System.out.println(animal_filtro);
        
        
         
    }//GEN-LAST:event_lblPesquisarMouseClicked
    
    private void preencherComboBoxAnimaisAdocao(JComboBox jcbAnimaisParaAdotar){
        ControllerAnimal daoAnimal = new ControllerAnimal();
        try {
            for(Animal animal : daoAnimal.getList(false)){
                jcbAnimaisParaAdotar.addItem(animal);
            }
        } catch (Exception ex) {
              JOptionPane.showMessageDialog(null, ex.getMessage(),
                    "Ocorreu um erro durante a execução do programa", JOptionPane.INFORMATION_MESSAGE);
            Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jpnExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnExcluirMouseClicked
        Animal animal = modeloTabela.getRowSelected(rowSelect);
        
        new Thread(new Runnable() {
            public void run() {
                JFrame frame;
                frame = new TelaLoading();
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
                frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                
                try {
                    Thread.sleep(500);
                    controllerAnimal.delete(animal);

                } catch (Exception ex) {
                      JOptionPane.showMessageDialog(null, ex.getMessage(),
                    "Ocorreu um erro durante a execução do programa", JOptionPane.INFORMATION_MESSAGE);
                    Logger.getLogger(TelaDeCadastroDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    modeloTabela = new MyTableModel(animal.isAdotado());                
                    jtTabelaAnimais.setModel(modeloTabela);
                } catch (Exception ex) {
                      JOptionPane.showMessageDialog(null, ex.getMessage(),
                    "Ocorreu um erro durante a execução do programa", JOptionPane.INFORMATION_MESSAGE);
                    Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
                }
                frame.setVisible(false);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
            }
            }).start();
    }//GEN-LAST:event_jpnExcluirMouseClicked

    private void jpnAdotarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnAdotarMouseClicked
        
        carregarAnimalParaAdocao();
        CardLayout cl = (CardLayout) jpnPaiLeft.getLayout();
        cl.show(jpnPaiLeft, "jpnCadastrarAdotante");
        
        CardLayout c2 = (CardLayout) jpnPai.getLayout();
        c2.show(jpnPai, "card3");
        
        JPanel p = framePrincipal.getLeftPanel();
        p.setVisible(false);
        
    }//GEN-LAST:event_jpnAdotarMouseClicked
    public void carregarAnimalParaAdocao(){
        Animal animal_up = modeloTabela.getRowSelected(rowSelect);        
        txt_imagem_animal_adocao.setIcon(Controll_Images.montarImagem(
                animal_up.getImagem(),-1,250));
        jlNome.setText(animal_up.getNome());
        jlEspecie.setText(animal_up.getEspecie());
        jlSexo1.setText(animal_up.getSexo());
        jlIdade.setText(animal_up.getIdade()+"");
        jlDescricao.setText(animal_up.getDescricao());
        jlCor.setText(animal_up.getCor());
    }
    
    public int rowSelect;
    private void atualizarAnimal() throws Exception{

        Animal animal_up = modeloTabela.getRowSelected(rowSelect);        
        animal_up.setNome(jtfNome.getText());
        animal_up.setEspecie(jtfEspecie.getText());
        animal_up.setIdade(Integer.parseInt(jtfIdade.getText()));
        animal_up.setPorte(jtfPorte.getText());
        animal_up.setRaca(jtfRaca.getText());
        animal_up.setCor(jtfCor.getText());
        if(jrbFemea.isSelected()){
            animal_up.setSexo("Fêmea");
            jpnPrenha.setVisible(true);
        }else{
            animal_up.setSexo("Macho");
            jpnPrenha.setVisible(false);
        }
        animal_up.setVacinado(jrbVacinadoSim.isSelected());
        animal_up.setCastrado(jrbCastradoSim.isSelected());
        animal_up.setQualDoenca(jtfDoenca.getText());
        animal_up.setDescricao(jtaDescricao.getText());
        animal_up.setImagem(Controll_Images.ImagemParaString((ImageIcon) txt_imagem.getIcon()));
        
        new Thread(new Runnable() {
            public void run() {
                JFrame frame;
                frame = new TelaLoading();
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
                frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                
                try {
                    Thread.sleep(500);
                    controllerAnimal.update(animal_up);
                } catch (Exception ex) {
                      JOptionPane.showMessageDialog(null, ex.getMessage(),
                    "Ocorreu um erro durante a execução do programa", JOptionPane.INFORMATION_MESSAGE);
                    Logger.getLogger(TelaDeCadastroDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    modeloTabela = new MyTableModel(animal_up.isAdotado());                
                    jtTabelaAnimais.setModel(modeloTabela);
                } catch (Exception ex) {
                      JOptionPane.showMessageDialog(null, ex.getMessage(),
                    "Ocorreu um erro durante a execução do programa", JOptionPane.INFORMATION_MESSAGE);
                    Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
                }
                frame.setVisible(false);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
            }
            }).start();
    }
    
    
    private void jpnAtualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnAtualizarMouseClicked
        try {
            atualizarAnimal();
        } catch (Exception ex) {
            Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jpnAtualizarMouseClicked

    private void jpnPesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnPesquisarMouseClicked
        CardLayout cl = (CardLayout) jpnPaiLeft.getLayout();
        cl.show(jpnPaiLeft, "jpnPesquisa");
        JPanel p = framePrincipal.getLeftPanel();
        p.setVisible(false);
    }//GEN-LAST:event_jpnPesquisarMouseClicked

    private void jpnListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnListaMouseClicked
        GerarPDF gerarPDF = new GerarPDF();
        try {
            gerarPDF.gerar(modeloTabela.getListAnimal());
        } catch (Exception ex) {
            Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jpnListaMouseClicked

    private void jtfEndereçoAdotanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEndereçoAdotanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEndereçoAdotanteActionPerformed

    private void jtfNomeAdotanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNomeAdotanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNomeAdotanteActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed
    
    public void adicionarImagem(JLabel fotinha) throws IOException {
        JFileChooser fc = new javax.swing.JFileChooser(ultimoPacote);
        fc.addChoosableFileFilter(new ImageFilter());
        fc.setAcceptAllFileFilterUsed(false);

        //Add custom icons for file types.
        fc.setFileView(new ImageFileView());

        //Add the preview pane.
        fc.setAccessory(new ImagePreview(fc));
        fc.showOpenDialog(null);
        File arquivo = fc.getSelectedFile();
        
        if (arquivo != null) {
            ultimoPacote = arquivo.getPath();
            BufferedImage bufferedImage = ImageIO.read(new File(ultimoPacote));
            Image image = bufferedImage.getScaledInstance(-1,
                    -1, Image.SCALE_FAST);
           
            ImageIcon imagem = new ImageIcon(image);
            //Controll_Images redimencionar = new Controll_Images();
            imagem.setImage(imagem.getImage().getScaledInstance(-1, 200, 100));
            
            fotinha.setIcon(imagem);
            ImagemIconAnimal = imagem;
        } else {
            System.out.println("Deu muito ruim");
        }
    }
    public void adicionarImagemAdotante(JLabel fotinha) throws IOException {
        JFileChooser jFileChooser1 = new javax.swing.JFileChooser(ultimoPacote);
        jFileChooser1.showOpenDialog(null);
        File arquivo = jFileChooser1.getSelectedFile();
        
        if (arquivo != null) {
            ultimoPacote = arquivo.getPath();
            BufferedImage bufferedImage = ImageIO.read(new File(ultimoPacote));
            Image image = bufferedImage.getScaledInstance(-1,
                    -1, Image.SCALE_AREA_AVERAGING);
           
            ImageIcon imagem = new ImageIcon(image);
            Controll_Images redimencionar = new Controll_Images();
            imagem = redimencionar.redimensionar_imagem(imagem);
            fotinha.setIcon(imagem);
            ImagemIconAdotante = imagem;
        } else {
            System.out.println("Deu muito ruim");
        }
    }
    
    private void jpnEfetuarAdocaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnEfetuarAdocaoMouseClicked
       
    }//GEN-LAST:event_jpnEfetuarAdocaoMouseClicked

    private void jpnVoltarATeladeAnimaisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnVoltarATeladeAnimaisMouseClicked
        CardLayout cl = (CardLayout) jpnPaiLeft.getLayout();
        cl.show(jpnPaiLeft, "jpnPrincipal");
    }//GEN-LAST:event_jpnVoltarATeladeAnimaisMouseClicked

        
    private void jtTabelaAnimaisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTabelaAnimaisMouseClicked
        rowSelect = jtTabelaAnimais.getSelectedRow();
        Animal animalAdocao =  modeloTabela.getRowSelected(rowSelect);
        preencherLabelsDescricao(animalAdocao);
    }//GEN-LAST:event_jtTabelaAnimaisMouseClicked
    
    private void preencherLabelsDescricao(Animal animalAdocao){
        System.out.println(animalAdocao);
        jtfEspecie.setText(animalAdocao.getEspecie());
        jtfNome.setText(animalAdocao.getNome());
        jtfIdade.setText(String.valueOf(animalAdocao.getIdade()));
        jtfPorte.setText(animalAdocao.getPorte());
        jtfRaca.setText(animalAdocao.getRaca());
        jtfCor.setText(animalAdocao.getCor());
        if(animalAdocao.getSexo().equals("Macho")){
            jrbMacho.setSelected(true);
            jpnPrenha.setVisible(false);
        }else if(animalAdocao.getSexo().equals("femea")){
            jrbFemea.setSelected(true);
            jpnPrenha.setVisible(true);
        }
        if(animalAdocao.isVacinado())
            jrbVacinadoSim.setSelected(true);
        else if(!animalAdocao.isVacinado())
            jrbVacinadoNao.setSelected(true);
        if(animalAdocao.isCastrado())
            jrbCastradoSim.setSelected(true);
        else if(!animalAdocao.isCastrado())
            jrbCastradoNao.setSelected(true);
        
        jtfDoenca.setText(animalAdocao.getQualDoenca());
        jtaDescricao.setText(animalAdocao.getDescricao());
        ImageIcon image;
        image = Services.Controll_Images.montarImagem(
                animalAdocao.getImagem(),
                200,-1);
        txt_imagem.setIcon(image);
    }
        
    private void jpnCadastrarAdotanteAtoDeAdocaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnCadastrarAdotanteAtoDeAdocaoMouseClicked
        CardLayout cl = (CardLayout) jpnPaiLeft.getLayout();
        cl.show(jpnPaiLeft, "jpnCadastrarAdotante");
    }//GEN-LAST:event_jpnCadastrarAdotanteAtoDeAdocaoMouseClicked

    private void jrbFemeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFemeaActionPerformed
        jpnPrenha.setVisible(true);
        jrbPrenhaSim.setSelected(false);
        jrbPrenhaNao.setSelected(false);
    }//GEN-LAST:event_jrbFemeaActionPerformed

    private void jrbMachoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMachoActionPerformed
        jpnPrenha.setVisible(false);
        jrbPrenhaSim.setSelected(false);
        jrbPrenhaNao.setSelected(false);
    }//GEN-LAST:event_jrbMachoActionPerformed

    private void jtfCorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCorActionPerformed

    private void jtfRacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfRacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfRacaActionPerformed

    private void jtfPorteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPorteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPorteActionPerformed

    private void jtfNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNomeActionPerformed

    private void jtfEspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEspecieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEspecieActionPerformed

    private void jpnExcluirFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnExcluirFotoMouseClicked
        ImagemIconAnimal = null;
        txt_imagem.setIcon(null);
    }//GEN-LAST:event_jpnExcluirFotoMouseClicked

    private void jpnAddFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnAddFotoMouseClicked
        try {
            // TODO add your handling code here:
            adicionarImagem(txt_imagem);
        } catch (IOException ex) {
               JOptionPane.showMessageDialog(null, ex.getMessage(),
                    "Ocorreu um erro durante a execução do programa", JOptionPane.INFORMATION_MESSAGE);
            Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jpnAddFotoMouseClicked

    private void jLimparSexoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLimparSexoMouseClicked
        // TODO add your handling code here:
        bgFiltroSexo.clearSelection();
    }//GEN-LAST:event_jLimparSexoMouseClicked

    private void jtfFiltroEspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfFiltroEspecieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFiltroEspecieActionPerformed

    private void jtfFiltroNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfFiltroNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFiltroNomeActionPerformed

    private void jtfFiltroPorteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfFiltroPorteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFiltroPorteActionPerformed

    private void jtfFiltroRacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfFiltroRacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFiltroRacaActionPerformed

    private void jtfFiltroCorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfFiltroCorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFiltroCorActionPerformed

    private void jrbFiltroMachoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFiltroMachoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbFiltroMachoActionPerformed

    private void jrbFemea3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFemea3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbFemea3ActionPerformed

    private void jrbFiltroFemeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFiltroFemeaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbFiltroFemeaActionPerformed

    private void jFecharPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFecharPesquisaMouseClicked
        CardLayout cl = (CardLayout) jpnPaiLeft.getLayout();
        cl.show(jpnPaiLeft, "jpnPrincipal");        // TODO add your handling code here:
    }//GEN-LAST:event_jFecharPesquisaMouseClicked

    private void jcbEscolherTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEscolherTabelaActionPerformed
        CardLayout cl = (CardLayout) jpnPai.getLayout();
        switch (jcbEscolherTabela.getSelectedItem().toString()) {
            case "Animais para Adoção":
            {
                cl.show(jpnPai, "TabelaAdocao");
                try {
                    modeloTabela = new MyTableModel(false);
                } catch (Exception ex) {
                    Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
                }
                jtTabelaAnimais.setModel(modeloTabela);
                break;
            }
            case "Animais Adotados":
            {
                cl.show(jpnPai, "TelaAdotados");
                try {
                    modeloTabela = new MyTableModel(true);
                } catch (Exception ex) {
                    Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
                }
                jtTabelaAnimais.setModel(modeloTabela);
                break;
            }
            default:
            break;
        }
        System.out.println(jcbEscolherTabela.getSelectedItem().toString());
    }//GEN-LAST:event_jcbEscolherTabelaActionPerformed

    private void jpnAddFotoAdptanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnAddFotoAdptanteMouseClicked
        try {
            adicionarImagemAdotante(txt_imagem_adotante);
        } catch (IOException ex) {
            Logger.getLogger(TelaDeCadastroDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jpnAddFotoAdptanteMouseClicked

    private void jpnExcluirFotoAdotanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnExcluirFotoAdotanteMouseClicked
        ImagemIconAdotante = null;
        txt_imagem_adotante.setIcon(null);
    }//GEN-LAST:event_jpnExcluirFotoAdotanteMouseClicked
    

    private void jLabel55MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel55MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel55MousePressed

    private void jpnFinalizarAdocaoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnFinalizarAdocaoMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpnFinalizarAdocaoMousePressed

    private void jpnCancelarAdocaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnCancelarAdocaoMouseClicked
        // TODO add your handling code here:
        CardLayout c2 = (CardLayout) jpnPaiLeft.getLayout();
        c2.show(jpnPaiLeft, "jpnPrincipal");
        
        
        CardLayout cl = (CardLayout) jpnPai.getLayout();
        cl.show(jpnPai, "TabelaAdocao");
                try {
                    modeloTabela = new MyTableModel(false);
                } catch (Exception ex) {
                    Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
                }
                jtTabelaAnimais.setModel(modeloTabela);
        
        JPanel p = framePrincipal.getLeftPanel();
        p.setVisible(false);
    }//GEN-LAST:event_jpnCancelarAdocaoMouseClicked

    private void jpnFinalizarAdocaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpnFinalizarAdocaoMouseClicked
        try {
            // TODO add your handling code here:
            String imagemAnimal = Controll_Images.ImagemParaString(ImagemIconAdotante);
            Adotante adotante = new Adotante(
                    jtfNomeAdotante.getText(),
                    jtfCPFAdotante.getText(),
                    jtfTelefoneAdotante.getText(),
                    jtfEndereçoAdotante.getText(),
                    imagemAnimal);
            ControllerAdotante ca = new ControllerAdotante();
            int id = ca.inserir(adotante);
            adotante.setId(id);
            Animal animal = modeloTabela.getRowSelected(rowSelect);
            ca.adotarAnimal(adotante,animal);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        CardLayout c2 = (CardLayout) jpnPaiLeft.getLayout();
        c2.show(jpnPaiLeft, "jpnPrincipal");
        
        
        CardLayout cl = (CardLayout) jpnPai.getLayout();
        cl.show(jpnPai, "TabelaAdocao");
                try {
                    modeloTabela = new MyTableModel(false);
                } catch (Exception ex) {
                    Logger.getLogger(TelaTabelaDeAnimais.class.getName()).log(Level.SEVERE, null, ex);
                }
                jtTabelaAnimais.setModel(modeloTabela);
        
        JPanel p = framePrincipal.getLeftPanel();
        p.setVisible(false);
    }//GEN-LAST:event_jpnFinalizarAdocaoMouseClicked
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgFiltroCastrado;
    private javax.swing.ButtonGroup bgFiltroPrenha;
    private javax.swing.ButtonGroup bgFiltroSexo;
    private javax.swing.ButtonGroup bgFiltroVacinado;
    private javax.swing.JLabel jFecharPesquisa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLimparSexo;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel jblPrenha;
    private javax.swing.JComboBox<String> jcbAnimais1;
    private javax.swing.JComboBox<String> jcbEscolherTabela;
    private javax.swing.JComboBox<String> jcbSelecioneAdotante;
    private javax.swing.JLabel jlCor;
    private javax.swing.JLabel jlDescricao;
    private javax.swing.JLabel jlEspecie;
    private javax.swing.JLabel jlIdade;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlSexo1;
    private javax.swing.JLabel jlbNomeAnimalAdocao;
    private javax.swing.JPanel jpDadosAdocao;
    private javax.swing.JPanel jpPesquisa;
    private javax.swing.JPanel jpnAddFoto;
    private javax.swing.JPanel jpnAddFotoAdptante;
    private javax.swing.JPanel jpnAdocao;
    private javax.swing.JPanel jpnAdotar;
    private javax.swing.JPanel jpnAtualizar;
    private javax.swing.JPanel jpnBackground;
    private javax.swing.JPanel jpnCadastrarAdot;
    private javax.swing.JPanel jpnCadastrarAdotanteAtoDeAdocao;
    private javax.swing.JPanel jpnCancelarAdocao;
    private javax.swing.JPanel jpnDescricao;
    private javax.swing.JPanel jpnEfetuarAdocao;
    private javax.swing.JPanel jpnExcluir;
    private javax.swing.JPanel jpnExcluirFoto;
    private javax.swing.JPanel jpnExcluirFotoAdotante;
    private javax.swing.JPanel jpnFiltros;
    private javax.swing.JPanel jpnFinalizarAdocao;
    private javax.swing.JPanel jpnLista;
    private javax.swing.JPanel jpnPai;
    private javax.swing.JPanel jpnPaiLeft;
    private javax.swing.JPanel jpnPesquisar;
    private javax.swing.JPanel jpnPrenha;
    private javax.swing.JPanel jpnPrincipal;
    private javax.swing.JPanel jpnVoltarATeladeAnimais;
    private javax.swing.JRadioButton jrbCastradoNao;
    private javax.swing.JRadioButton jrbCastradoSim;
    private javax.swing.JRadioButton jrbFemea;
    private javax.swing.JRadioButton jrbFemea3;
    private javax.swing.JRadioButton jrbFiltroFemea;
    private javax.swing.JRadioButton jrbFiltroMacho;
    private javax.swing.JRadioButton jrbMacho;
    private javax.swing.JRadioButton jrbPrenhaNao;
    private javax.swing.JRadioButton jrbPrenhaSim;
    private javax.swing.JRadioButton jrbVacinadoNao;
    private javax.swing.JRadioButton jrbVacinadoSim;
    private javax.swing.JScrollPane jspAdocao;
    private javax.swing.JScrollPane jspDescricao;
    private javax.swing.JTable jtTabelaAnimais;
    private javax.swing.JTextArea jtaDescricao;
    private javax.swing.JFormattedTextField jtfCPFAdotante;
    private javax.swing.JTextField jtfCor;
    private javax.swing.JTextField jtfDoenca;
    private javax.swing.JTextField jtfEndereçoAdotante;
    private javax.swing.JTextField jtfEspecie;
    private javax.swing.JTextField jtfFiltroCor;
    private javax.swing.JTextField jtfFiltroEspecie;
    private javax.swing.JTextField jtfFiltroNome;
    private javax.swing.JTextField jtfFiltroPorte;
    private javax.swing.JTextField jtfFiltroRaca;
    private javax.swing.JTextField jtfIdade;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfNomeAdotante;
    private javax.swing.JTextField jtfPorte;
    private javax.swing.JTextField jtfRaca;
    private javax.swing.JFormattedTextField jtfTelefoneAdotante;
    private javax.swing.JLabel lblPesquisar;
    private javax.swing.JLabel txt_imagem;
    private javax.swing.JLabel txt_imagem1;
    private javax.swing.JLabel txt_imagem_adotante;
    private javax.swing.JLabel txt_imagem_animal_adocao;
    // End of variables declaration//GEN-END:variables

}
